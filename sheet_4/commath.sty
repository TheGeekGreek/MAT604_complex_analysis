%%% ====================================================================
%%% @LaTeX-file{
%%%   filename  = "commath.sty",
%%%   version   = "0.3",
%%%   date      = "2006",
%%%   author    = "Wolfgang Putschögl",
%%%   address   = "Johann Radon Institute for Computational and Applied Mathematics (RICAM)
%%%                Austrian Academy of Sciences
%%%                Altenbergerstraße 69
%%%                A-4040 Linz, Austria",
%%%   email     = "Wolfgang.Putschoegl@oeaw.ac.at",
%%%   codetable = "Western European, iso 8859-15",
%%%   keywords  = "LaTeX",
%%% }
%%% ====================================================================
\NeedsTeXFormat{LaTeX2e} % LaTeX 2.09 can't be used (nor non-LaTeX)
[1994/12/01]             % LaTeX date must December 1994 or later

\RequirePackage{ifthen}
\RequirePackage{amsmath}

% Differential (upface d)
\DeclareMathOperator{\dif}{d \!}
% Derivative (upface D)
\DeclareMathOperator{\Dif}{D \!}

% Command for partial derivatives. The first argument denotes the function and the second argument denotes the variable with respect to which the derivative is taken. The optional argument denotes the order of differentiation. The style (text style/display style) is determined automatically
\providecommand{\pd}[3][]{\ensuremath{
\ifinner
\tfrac{\partial{^{#1}}#2}{\partial{#3^{#1}}}
\else
\dfrac{\partial{^{#1}}#2}{\partial{#3^{#1}}}
\fi
}}

% \tpd[2]{f}{k} denotes the second partial derivative of f with respect to k
% The first letter t means "text style"
\providecommand{\tpd}[3][]{\ensuremath{\mathinner{
\tfrac{\partial{^{#1}}#2}{\partial{#3^{#1}}}
}}}
% \dpd[2]{f}{k} denotes the second partial derivative of f with respect to k
% The first letter d means "display style"
\providecommand{\dpd}[3][]{\ensuremath{\mathinner{
\dfrac{\partial{^{#1}}#2}{\partial{#3^{#1}}}
}}}

% mixed derivative - analogous to the partial derivative command
% \md{f}{5}{x}{2}{y}{3}
\providecommand{\md}[6]{\ensuremath{
\ifinner
\tfrac{\partial{^{#2}}#1}{\partial{#3^{#4}}\partial{#5^{#6}}}
\else
\dfrac{\partial{^{#2}}#1}{\partial{#3^{#4}}\partial{#5^{#6}}}
\fi
}}

% \tpd[2]{f}{k} denotes the second partial derivative of f with respect to k
% The first letter t means "text style"
\providecommand{\tmd}[6]{\ensuremath{\mathinner{
\tfrac{\partial{^{#2}}#1}{\partial{#3^{#4}}\partial{#5^{#6}}}
}}}
% \dpd[2]{f}{k} denotes the second partial derivative of f with respect to k
% The first letter d means "display style"
\providecommand{\dmd}[6]{\ensuremath{\mathinner{
\dfrac{\partial{^{#2}}#1}{\partial{#3^{#4}}\partial{#5^{#6}}}
}}}


% ordinary derivative - analogous to the partial derivative command
\providecommand{\od}[3][]{\ensuremath{
\ifinner
\tfrac{\dif{^{#1}}#2}{\dif{#3^{#1}}}
\else
\dfrac{\dif{^{#1}}#2}{\dif{#3^{#1}}}
\fi
}}

\providecommand{\tod}[3][]{\ensuremath{\mathinner{
\tfrac{\dif{^{#1}}#2}{\dif{#3^{#1}}}
}}}
\providecommand{\dod}[3][]{\ensuremath{\mathinner{
\dfrac{\dif{^{#1}}#2}{\dif{#3^{#1}}}
}}}



\providecommand{\thmref}[1]{Theorem~\ref{#1}}
\providecommand{\exref}[1]{Example~\ref{#1}}
\providecommand{\defnref}[1]{Definition~\ref{#1}}
\providecommand{\secref}[1]{\S\ref{#1}}
\providecommand{\lemref}[1]{Lemma~\ref{#1}}
\providecommand{\propref}[1]{Proposition~\ref{#1}}
\providecommand{\remref}[1]{Remark~\ref{#1}}
\providecommand{\figref}[1]{Figure~\ref{#1}}
\providecommand{\colref}[1]{Corollary~\ref{#1}}
\providecommand{\appref}[1]{Appendix~\ref{#1}}
\providecommand{\assref}[1]{Assumption~\ref{#1}}

% Make nested braces grow.
\delimitershortfall-1sp

% the value for the optional argument ranges from -1 to 4 with higher values resulting in larger delimiters
% default value for #1 is -1 which results in automatic size for the parenthesis (del -> DELimiters)
\providecommand{\del}[2][-1]{
\ensuremath{\mathinner{
\ifthenelse{\equal{#1}{-1}}{ % if
\left(#2\right)}{}
\ifthenelse{\equal{#1}{0}}{ % if
(#2)}{}
\ifthenelse{\equal{#1}{1}}{ % if
\bigl(#2\bigr)}{}
\ifthenelse{\equal{#1}{2}}{ % if
\Bigl(#2\Bigr)}{}
\ifthenelse{\equal{#1}{3}}{ % if
\biggl(#2\biggr)}{}
\ifthenelse{\equal{#1}{4}}{ % if
\Biggl(#2\Biggr)}{}
}} % \ensuremath{\mathinner{
}  % DELimiters - normal parenthesis, the optional argument describes the size of the parenthesis, no argument results in automatic size

% the value for the optional argument ranges from -1 to 4 with higher values resulting in larger delimiters
% default value for #1 is -1 which results in automatic size for the brackets
\providecommand{\set}[2][-1]{
\ensuremath{\mathinner{
\ifthenelse{\equal{#1}{-1}}{ % if
\left\{#2\right\}}{}
\ifthenelse{\equal{#1}{0}}{ % if
\{#2\}}{}
\ifthenelse{\equal{#1}{1}}{ % if
\bigl\{#2\bigr\}}{}
\ifthenelse{\equal{#1}{2}}{ % if
\Bigl\{#2\Bigr\}}{}
\ifthenelse{\equal{#1}{3}}{ % if
\biggl\{#2\biggr\}}{}
\ifthenelse{\equal{#1}{4}}{ % if
\Biggl\{#2\Biggr\}}{}
}} % \ensuremath{\mathinner{
}  % Curly BRaces, the optional argument describes the size of the braces, no argument results in automatic size
\let\cbr=\set % Curly BRaces

% the value for the optional argument ranges from -1 to 4 with higher values resulting in larger delimiters
% default value for #1 is -1 which results in automatic size for the brackets
\providecommand{\sbr}[2][-1]{
\ensuremath{\mathinner{
\ifthenelse{\equal{#1}{-1}}{ % if
\left[#2\right]}{}
\ifthenelse{\equal{#1}{0}}{ % if
[#2]}{}
\ifthenelse{\equal{#1}{1}}{ % if
\bigl[#2\bigr]}{}
\ifthenelse{\equal{#1}{2}}{ % if
\Bigl[#2\Bigr]}{}
\ifthenelse{\equal{#1}{3}}{ % if
\biggl[#2\biggr]}{}
\ifthenelse{\equal{#1}{4}}{ % if
\Biggl[#2\Biggr]}{}
}} % \ensuremath{\mathinner{
} % Square BRackets, the optional argument describes the size of the brackets, no argument results in automatic size

% All kinds of intervals -------------------------------------------------

% the value for the optional argument ranges from -1 to 4 with higher values resulting in larger delimiters
% (#1,#2) open   open
\providecommand{\intoo}[2][-1]{\del[#1]{#2}}
% [#1,#2] closed closed
\providecommand{\intcc}[2][-1]{\sbr[#1]{#2}}

% (#1,#2] open   closed
\providecommand{\intoc}[2][-1]{
\ensuremath{\mathinner{
\ifthenelse{\equal{#1}{-1}}{ % if
\left(#2\right]}{}
\ifthenelse{\equal{#1}{0}}{ % if
(#2]}{}
\ifthenelse{\equal{#1}{1}}{ % if
\bigl(#2\bigr]}{}
\ifthenelse{\equal{#1}{2}}{ % if
\Bigl(#2\Bigr]}{}
\ifthenelse{\equal{#1}{3}}{ % if
\biggl(#2\biggr]}{}
\ifthenelse{\equal{#1}{4}}{ % if
\Biggl(#2\Biggr]}{}
}} % \ensuremath{\mathinner{
}

% [#1,#2) closed open
\providecommand{\intco}[2][-1]{
\ensuremath{\mathinner{
\ifthenelse{\equal{#1}{-1}}{ % if
\left[#2\right)}{}
\ifthenelse{\equal{#1}{0}}{ % if
[#2)}{}
\ifthenelse{\equal{#1}{1}}{ % if
\bigl[#2\bigr)}{}
\ifthenelse{\equal{#1}{2}}{ % if
\Bigl[#2\Bigr)}{}
\ifthenelse{\equal{#1}{3}}{ % if
\biggl[#2\biggr)}{}
\ifthenelse{\equal{#1}{4}}{ % if
\Biggl[#2\Biggr)}{}
}} % \ensuremath{\mathinner{
}
% ------------------------------------------------------------------------

% Notation for an expression evaluated at a particular condition:
% the value for the optional argument ranges from -1 to 4 with higher values resulting in larger delimiters
\providecommand{\eval}[2][-1]{
\ensuremath{\mathinner{
\ifthenelse{\equal{#1}{-1}}{ % if
#2\Biggr\rvert}{}
\ifthenelse{\equal{#1}{0}}{ % if
#2\rvert}{}
\ifthenelse{\equal{#1}{1}}{ % if
#2\bigr\rvert}{}
\ifthenelse{\equal{#1}{2}}{ % if
#2\Bigr\rvert}{}
\ifthenelse{\equal{#1}{3}}{ % if
#2\biggr\rvert}{}
\ifthenelse{\equal{#1}{4}}{ % if
#2\Biggr\rvert}{}
}} % \ensuremath{\mathinner{
}

\providecommand{\sVert}[1][0]{
\ensuremath{\mathinner{
\ifthenelse{\equal{#1}{0}}{ % if
\rvert}{}
\ifthenelse{\equal{#1}{1}}{ % if
\bigr\rvert}{}
\ifthenelse{\equal{#1}{2}}{ % if
\Bigr\rvert}{}
\ifthenelse{\equal{#1}{3}}{ % if
\biggr\rvert}{}
\ifthenelse{\equal{#1}{4}}{ % if
\Biggr\rvert}{}
}} % \ensuremath{\mathinner{
}


% Enclose the argument in vert-bar delimiters:
% the value for the optional argument ranges from -1 to 4 with higher values resulting in larger delimiters
\providecommand{\envert}[2][-1]{
\ensuremath{\mathinner{
\ifthenelse{\equal{#1}{-1}}{ % if
\!\left\lvert#2\right\rvert}{}
\ifthenelse{\equal{#1}{0}}{ % if
\lvert#2\rvert}{}
\ifthenelse{\equal{#1}{1}}{ % if
\!\bigl\lvert#2\bigr\rvert}{}
\ifthenelse{\equal{#1}{2}}{ % if
\!\Bigl\lvert#2\Bigr\rvert}{}
\ifthenelse{\equal{#1}{3}}{ % if
\!\biggl\lvert#2\biggr\rvert}{}
\ifthenelse{\equal{#1}{4}}{ % if
\!\Biggl\lvert#2\Biggr\rvert}{}
}} % \ensuremath{\mathinner{
}
\let\abs=\envert

% Enclose the argument in double-vert-bar delimiters:
% the value for the optional argument ranges from -1 to 4 with higher values resulting in larger delimiters
\providecommand{\enVert}[2][-1]{
\ensuremath{\mathinner{
\ifthenelse{\equal{#1}{-1}}{ % if
\!\left\lVert#2\right\rVert}{}
\ifthenelse{\equal{#1}{0}}{ % if
\lVert#2\rVert}{}
\ifthenelse{\equal{#1}{1}}{ % if
\!\bigl\lVert#2\bigr\rVert}{}
\ifthenelse{\equal{#1}{2}}{ % if
\!\Bigl\lVert#2\Bigr\rVert}{}
\ifthenelse{\equal{#1}{3}}{ % if
\!\biggl\lVert#2\biggr\rVert}{}
\ifthenelse{\equal{#1}{4}}{ % if
\!\Biggl\lVert#2\Biggr\rVert}{}
}} % \ensuremath{\mathinner{
}
\let\norm=\enVert

% Fix alignment of := in mathmode
\mathchardef\ordinarycolon\mathcode`\:
\mathcode`\:=\string"8000
\begingroup \catcode`\:=\active
   \gdef:{\mathrel{\mathop\ordinarycolon}}
\endgroup

% Full function
\providecommand{\fullfunction}[5]{\ensuremath{
   \begin {array}{ccrcl}
       {#1}    & \colon  & {#2} & \longrightarrow & {#3} \\
       \mbox{} & \mbox{} & {#4} & \longmapsto     & {#5}
   \end{array}
}}

% ------------------------------------------------------------------------
